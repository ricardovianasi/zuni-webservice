<?php

namespace DoctrineORMModule\Proxy\__CG__\Application\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Album extends \Application\Entity\Album implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Application\\Entity\\Album' . "\0" . 'id', '' . "\0" . 'Application\\Entity\\Album' . "\0" . 'name', '' . "\0" . 'Application\\Entity\\Album' . "\0" . 'description', '' . "\0" . 'Application\\Entity\\Album' . "\0" . 'visibility', '' . "\0" . 'Application\\Entity\\Album' . "\0" . 'user', '' . "\0" . 'Application\\Entity\\Album' . "\0" . 'createdAt', '' . "\0" . 'Application\\Entity\\Album' . "\0" . 'updatedAt', '' . "\0" . 'Application\\Entity\\Album' . "\0" . 'tags', '' . "\0" . 'Application\\Entity\\Album' . "\0" . 'location', '' . "\0" . 'Application\\Entity\\Album' . "\0" . 'cover', '' . "\0" . 'Application\\Entity\\Album' . "\0" . 'imageCount', '' . "\0" . 'Application\\Entity\\Album' . "\0" . 'shareUsers', '' . "\0" . 'Application\\Entity\\Album' . "\0" . 'shareGroups');
        }

        return array('__isInitialized__', '' . "\0" . 'Application\\Entity\\Album' . "\0" . 'id', '' . "\0" . 'Application\\Entity\\Album' . "\0" . 'name', '' . "\0" . 'Application\\Entity\\Album' . "\0" . 'description', '' . "\0" . 'Application\\Entity\\Album' . "\0" . 'visibility', '' . "\0" . 'Application\\Entity\\Album' . "\0" . 'user', '' . "\0" . 'Application\\Entity\\Album' . "\0" . 'createdAt', '' . "\0" . 'Application\\Entity\\Album' . "\0" . 'updatedAt', '' . "\0" . 'Application\\Entity\\Album' . "\0" . 'tags', '' . "\0" . 'Application\\Entity\\Album' . "\0" . 'location', '' . "\0" . 'Application\\Entity\\Album' . "\0" . 'cover', '' . "\0" . 'Application\\Entity\\Album' . "\0" . 'imageCount', '' . "\0" . 'Application\\Entity\\Album' . "\0" . 'shareUsers', '' . "\0" . 'Application\\Entity\\Album' . "\0" . 'shareGroups');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Album $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', array());

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt($createdAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', array($createdAt));

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', array());

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', array($description));

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', array($id));

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getLocation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLocation', array());

        return parent::getLocation();
    }

    /**
     * {@inheritDoc}
     */
    public function setLocation($locations)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLocation', array($locations));

        return parent::setLocation($locations);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getVisibility()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVisibility', array());

        return parent::getVisibility();
    }

    /**
     * {@inheritDoc}
     */
    public function setVisibility($visibility)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVisibility', array($visibility));

        return parent::setVisibility($visibility);
    }

    /**
     * {@inheritDoc}
     */
    public function getTags()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTags', array());

        return parent::getTags();
    }

    /**
     * {@inheritDoc}
     */
    public function setTags($tags)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTags', array($tags));

        return parent::setTags($tags);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', array());

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt($updatedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', array($updatedAt));

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', array());

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser($user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', array($user));

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function setCover(\Doctrine\ORM\Event\LifecycleEventArgs $event)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCover', array($event));

        return parent::setCover($event);
    }

    /**
     * {@inheritDoc}
     */
    public function getCover()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCover', array());

        return parent::getCover();
    }

    /**
     * {@inheritDoc}
     */
    public function setImageCount(\Doctrine\ORM\Event\LifecycleEventArgs $event)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImageCount', array($event));

        return parent::setImageCount($event);
    }

    /**
     * {@inheritDoc}
     */
    public function getImageCount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImageCount', array());

        return parent::getImageCount();
    }

    /**
     * {@inheritDoc}
     */
    public function getShareUsers()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShareUsers', array());

        return parent::getShareUsers();
    }

    /**
     * {@inheritDoc}
     */
    public function setShareUsers($shareUsers)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setShareUsers', array($shareUsers));

        return parent::setShareUsers($shareUsers);
    }

    /**
     * {@inheritDoc}
     */
    public function getShareGroups()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShareGroups', array());

        return parent::getShareGroups();
    }

    /**
     * {@inheritDoc}
     */
    public function setShareGroups($shareGroups)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setShareGroups', array($shareGroups));

        return parent::setShareGroups($shareGroups);
    }

    /**
     * {@inheritDoc}
     */
    public function toArray($depth = 1, $blackList = array (
))
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toArray', array($depth, $blackList));

        return parent::toArray($depth, $blackList);
    }

    /**
     * {@inheritDoc}
     */
    public function toJson()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toJson', array());

        return parent::toJson();
    }

    /**
     * {@inheritDoc}
     */
    public function setData(array $data)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setData', array($data));

        return parent::setData($data);
    }

    /**
     * {@inheritDoc}
     */
    public function parseData($date, &$property)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'parseData', array($date, $property));

        return parent::parseData($date, $property);
    }

}
